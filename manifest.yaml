apiVersion: v1
kind: Secret
metadata:
  name: aws
type: Opaque
stringData:
  AWS_ACCESS_KEY: ""
  AWS_SECRET_KEY: ""

---

apiVersion: v1
kind: Secret
metadata:
  name: google
type: Opaque
stringData:
  # Service account credentials in JSON format. 
  GOOGLE_CREDENTIALS_JSON: |-
              ""
---

apiVersion: sources.triggermesh.io/v1alpha1
kind: AWSS3Source
metadata:
  name: my-bucket
spec:
  # This should point to your aws s3 bucket IE: arn:aws:s3:us-west-2:925906438773:demobkt-triggermesh
  # The default ARN from AWS needs the region and your account ID added to it as above: 
  # https://docs.triggermesh.io/sources/awss3/#amazon-resource-name-arn
  arn: ""
  credentials:
    accessKeyID:
      valueFromSecret:
        key: AWS_ACCESS_KEY
        name: aws
    secretAccessKey:
      valueFromSecret:
        key: AWS_SECRET_KEY
        name: aws
  eventTypes:
  - s3:ObjectCreated:*
  sink:
    ref:
      apiVersion: eventing.knative.dev/v1
      kind: Broker
      name: default

---

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
 name: tensformation
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/target: "4"
    spec:
      containers:
        - image: ghcr.io/mylesagray/tensformation
          env:
          # This should point to the broker in the namespace ie: http://broker-ingress.knative-eventing.svc.cluster.local/jeff/default
            - name: K_SINK
              value: ""
            - name: AWS_REGION
              value: ""
          # This should point the the deployed tensorflow service ie: https://tf-inference-server.jeff.k.triggermesh.io/v1/models/anpr:predict
          # Please note, the endpoint of '/v1/models/anpr:predict' must be used here.
            - name: TENSORFLOW_ENDPOINT
              value: ""
          envFrom: 
            - secretRef:
                name: aws

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: tensformation
spec:
  broker: default
  filter:
    attributes:
      type: com.amazon.s3.objectcreated
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: tensformation

---

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: label-analyser
  labels:
    serving.knative.dev/visibility: cluster-local
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/target: "10"
    spec:
      containers:
      - image: ghcr.io/mylesagray/label_analyser
        env:
         # This should point to the broker in the namespace ie: http://broker-ingress.knative-eventing.svc.cluster.local/jeff/default
          - name: K_SINK
            value: ""
         # The Google sheet ID to be updated
         # You need to set up a project, service account and add the sheets service to it:
         # https://docs.triggermesh.io/targets/googlesheets/
          - name: SHEET_ID
            value: ""
        envFrom: 
          - secretRef:
              name: google

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: label-analyser
spec:
  broker: default
  filter:
    attributes:
      type: io.triggermesh.transformations.tensformation.response
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: label-analyser

---

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: tf-inference-server
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/window: "180s"
        autoscaling.knative.dev/target: "5"
    spec:
      containers:
      - args:
        - --model_config_file=/configs/models-local.config
        - --monitoring_config_file=/configs/monitoring_config.txt
        - --rest_api_timeout_in_ms=0
        - --tensorflow_intra_op_parallelism=2
        - --tensorflow_inter_op_parallelism=2
        - --max_batch_size=5
        - --num_batch_threads=2
        - --max_enqueued_batches=1
        - --enable_batching
        env:
        - name: TF_CPP_VMODULE
          value: http_server=3
        image: ghcr.io/mylesagray/anpr-serving
        ports:
        - containerPort: 8501
        resources:
          requests:
            cpu: 2
            memory: 4Gi

---

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
    name: all-display
spec:
  template:
    spec:
      containers:
       -  image: gcr.io/knative-releases/knative.dev/eventing-contrib/cmd/event_display@sha256:46d5a66f300c3ced590835d379a0e9badf413ae7ab60f21a2550ecedbc9eb9d3

# OR if you want sockeye 
# docker.io/n3wscott/sockeye:v0.5.0@sha256:64c22fe8688a6bb2b44854a07b0a2e1ad021cd7ec52a377a6b135afed5e9f5d2

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
    name: all-display-trigger
spec:
    broker: default
    subscriber:
        ref:
            apiVersion: serving.knative.dev/v1
            kind: Service
            name: all-display

---
# Used to monitor for any errors that may occur within tensformation or tensorflow_client
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
    name: error-display
spec:
  template:
    spec:
      containers:
       -  image: docker.io/n3wscott/sockeye:v0.5.0@sha256:64c22fe8688a6bb2b44854a07b0a2e1ad021cd7ec52a377a6b135afed5e9f5d2

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
    name: error-display-tensformation
spec:
  broker: default
  filter:
    attributes:
      type: io.triggermesh.transformations.tensformation.response.error
  subscriber:
      ref:
          apiVersion: serving.knative.dev/v1
          kind: Service
          name: error-display

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
    name: error-display-label-analyser
spec:
  broker: default
  filter:
    attributes:
      type: io.triggermesh.functions.tensorflow.label.analyser.response.error
  subscriber:
      ref:
          apiVersion: serving.knative.dev/v1
          kind: Service
          name: error-display

---

# Used to monitor for events that occur when a plate is not recognized in an image. 
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
    name: no-plateid-display
spec:
  template:
    spec:
      containers:
       -  image: docker.io/n3wscott/sockeye:v0.5.0@sha256:64c22fe8688a6bb2b44854a07b0a2e1ad021cd7ec52a377a6b135afed5e9f5d2

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
    name: no-plateid-display
spec:
  broker: default
  filter:
    attributes:
      type: io.triggermesh.functions.tensorflow.label.analyser.response.noid
  subscriber:
      ref:
          apiVersion: serving.knative.dev/v1
          kind: Service
          name: no-plateid-display
